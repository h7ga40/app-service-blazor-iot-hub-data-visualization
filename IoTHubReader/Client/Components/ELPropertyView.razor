@using System.Text.Json
@using IoTHubReader.Client.Pages

@if (Property != null) {
	<h3>
		@Property.Ja
	</h3>
	<div>@($"Get:{Property.Get}, Set:{Property.Set}, Inf:{Property.Inf}")</div>
	<pre>@GetDataInfo()</pre>
}

@code{
	ELProperty property;
	[Parameter]
	public ELProperty Property { get { return property; } set { SetProperty(value); } }

	List<DTInterface> dtifs = new List<DTInterface>();

	protected void SetProperty(ELProperty property)
	{
		this.property = property;
		if (property == null)
			return;

		dtifs.Clear();

		Counter.MakeDTInterface(dtifs, 0, Counter.GetAccessValue(property),
			property.Ja, property.En, property.Data);

		if (property.OneOf != null) {
			foreach (var one in property.OneOf) {
				Counter.MakeDTInterface(dtifs, 0, Counter.GetAccessValue(one),
					one.Ja, one.En, one.Data);
			}
		}
	}

	public string GetDataInfo()
	{
		var data = Property.Data;
		var option = new JsonSerializerOptions { WriteIndented = true, IgnoreNullValues = true };

#if false
	if (data.Reference != null) {
		return JsonSerializer.Serialize(data.Reference, option); ;
	}

	return JsonSerializer.Serialize(data, option);
#else
		return JsonSerializer.Serialize(dtifs.ToArray(), option);
#endif
	}
}
